rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isDriver() {
      return exists(/databases/$(database)/documents/drivers/$(request.auth.uid));
    }

    function isPassengerOfTrip(tripId) {
      return request.auth.uid == get(/databases/$(database)/documents/trips/$(tripId)).data.passengerId;
    }

    // --- Colección de Conductores (drivers) ---
    match /drivers/{userId} {
      // Se permite la lectura a cualquier usuario autenticado para ver perfiles públicos.
      allow read: if request.auth != null;
      
      // Solo el propio conductor puede CREAR o ELIMINAR su perfil.
      allow create, delete: if request.auth.uid == userId;
      
      // SOLUCIÓN: Se permite la actualización a cualquier usuario autenticado.
      // Esto es necesario para que la transacción de valoración del pasajero
      // (que actualiza rating, ratingCount y completedTrips) funcione.
      allow update: if request.auth != null;

      // --- Sub-colección de Valoraciones (ratings) ---
      match /ratings/{ratingId} {
        allow read: if request.auth != null;
        
        // SOLUCIÓN: Se permite a cualquier usuario autenticado crear una valoración.
        allow create: if request.auth != null;
      }
    }

    // --- Colección de Usuarios (users - Pasajeros) ---
    match /users/{userId} {
      // Solo el propio usuario puede leer y escribir en su perfil.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // --- Colección de Viajes (trips) ---
    match /trips/{tripId} {
      allow read: if request.auth != null &&
                   (
                    (resource.data.status == 'searching') ||
                    (request.auth.uid == resource.data.passengerId) ||
                    (resource.data.driverId != null && request.auth.uid == resource.data.driverId) ||
                    (isDriver() && exists(/databases/$(database)/documents/trips/$(tripId)/offers/$(request.auth.uid)))
                   );

      allow create: if request.auth != null && request.resource.data.passengerId == request.auth.uid;
      
      allow delete: if request.auth != null && resource.data.passengerId == request.auth.uid;
      
      allow update: if request.auth != null &&
                     (
                      (request.auth.uid == resource.data.passengerId) ||
                      (resource.data.driverId != null && request.auth.uid == resource.data.driverId)
                     );

      // --- Sub-colección de Ofertas (offers) ---
      match /offers/{offerId} {
        allow create: if isDriver() && request.resource.data.driverId == request.auth.uid;
        
        allow read, update: if request.auth != null &&
                             (
                               isPassengerOfTrip(tripId) ||
                               request.auth.uid == get(/databases/$(database)/documents/trips/$(tripId)).data.driverId ||
                               request.auth.uid == resource.data.driverId
                             );
      }
      
      // --- Sub-colección de Mensajes (messages) ---
      match /messages/{messageId} {
        allow read, create: if request.auth != null &&
                              (
                                isPassengerOfTrip(tripId) ||
                                (get(/databases/$(database)/documents/trips/$(tripId)).data.driverId != null &&
                                 request.auth.uid == get(/databases/$(database)/documents/trips/$(tripId)).data.driverId)
                              );
      }
    }
  }
}
