rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Funciones de Ayuda ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isDriver() {
      return exists(/databases/$(database)/documents/drivers/$(request.auth.uid));
    }

    function getTripData(tripId) {
      return get(/databases/$(database)/documents/trips/$(tripId)).data;
    }

    function isPassengerOfTrip(tripId) {
      return request.auth.uid == getTripData(tripId).passengerId;
    }

    function isDriverOfTrip(tripId) {
      let tripData = getTripData(tripId);
      return tripData.driverId != null && request.auth.uid == tripData.driverId;
    }

    // --- Colección de Conductores (drivers) ---
    match /drivers/{userId} {
      // LECTURA SEGURA: Solo el propio conductor, o un pasajero/conductor involucrado en un viaje
      // con este conductor, puede leer su perfil completo. Otros solo pueden leer la información pública.
      allow read: if isOwner(userId) ||
                   exists(/databases/$(database)/documents/trips/{tripId} where 
                     (getTripData(tripId).passengerId == request.auth.uid || getTripData(tripId).driverId == request.auth.uid) &&
                     getTripData(tripId).driverId == userId);
      
      // ESCRITURA SEGURA: Solo el propio conductor puede crear o eliminar su perfil.
      allow create, delete: if isOwner(userId);
      
      // ACTUALIZACIÓN SEGURA:
      // El conductor puede actualizar su propio perfil.
      // O un pasajero puede actualizarlo SOLO para añadir una valoración, modificando únicamente los campos permitidos.
      allow update: if isOwner(userId) || 
                     (request.auth != null && 
                      request.resource.data.diff(resource.data).affectedKeys()
                        .hasOnly(['rating', 'ratingCount', 'completedTrips', 'lastRatedByTripId']));
    }

    // --- Sub-colección de Valoraciones (ratings) ---
    match /drivers/{driverId}/ratings/{ratingId} {
      allow read: if request.auth != null;
      // VALORACIÓN SEGURA: Solo un pasajero que haya completado un viaje puede crear una valoración.
      allow create: if request.auth != null && 
                       isPassengerOfTrip(request.resource.data.tripId);
    }

    // --- Colección de Usuarios (users - Pasajeros) ---
    match /users/{userId} {
      // Solo el propio usuario puede leer y escribir en su perfil.
      allow read, write: if isOwner(userId);
    }
    
    // --- Colección de Viajes (trips) ---
    match /trips/{tripId} {
      // LECTURA SEGURA:
      // - Un conductor puede leer un viaje si está en "búsqueda".
      // - El pasajero o el conductor asignado pueden leer el viaje.
      // - Un conductor puede leer un viaje si ha enviado una oferta para él.
      allow read: if request.auth != null && 
                  ((resource.data.status == 'searching' && isDriver()) ||
                   isPassengerOfTrip(tripId) || 
                   isDriverOfTrip(tripId) ||
                   (isDriver() && exists(/databases/$(database)/documents/trips/$(tripId)/offers/$(request.auth.uid))));

      allow create: if isPassengerOfTrip(tripId);
      allow delete: if isPassengerOfTrip(tripId);
      
      // ACTUALIZACIÓN SEGURA: El pasajero, el conductor asignado, o un conductor que se está asignando pueden actualizar el viaje.
      allow update: if request.auth != null &&
                    (isPassengerOfTrip(tripId) || 
                     isDriverOfTrip(tripId) ||
                     (isDriver() && resource.data.driverId == null && request.resource.data.driverId == request.auth.uid));
    }

    // --- Sub-colección de Ofertas (offers) ---
    match /trips/{tripId}/offers/{offerId} {
      allow create: if isDriver() && request.resource.data.driverId == request.auth.uid;
      // LECTURA/ACTUALIZACIÓN SEGURA: El pasajero del viaje o el conductor que creó la oferta pueden acceder.
      allow read, update: if request.auth != null && 
                    (isPassengerOfTrip(tripId) || request.auth.uid == resource.data.driverId);
    }
      
    // --- Sub-colección de Mensajes (messages) ---
    match /trips/{tripId}/messages/{messageId} {
      // Solo el pasajero y el conductor del viaje pueden leer y crear mensajes.
      allow read, create: if request.auth != null && 
                           (isPassengerOfTrip(tripId) || isDriverOfTrip(tripId));
    }
  }
}
